apiVersion: apps/v1
kind: Deployment
metadata:
  name: irmgard
spec:
  replicas: 3
  selector:
    matchLabels:
      app: irmgard
  template:
    metadata:
      labels:
        app: irmgard
    spec:
      containers:
        - name: irmgard
          image: germaingirndt/irmgard:latest # TODO: change to fixed version
          ports:
            - containerPort: 80
          resources:
            requests: # min
              cpu: 100m # MilliCPU
              memory: 128Mi
            limits: # max
              cpu: 500m
              memory: 512Mi
          startupProbe:
            httpGet:
              path: /     # /health for failed http request
              port: 8080  
            initialDelaySeconds: 45 # exact time given for postgres, minio, rabbitmq to start +15s => no crash loopback error bc 
            periodSeconds: 4        # of not reachable pods due to slower startup
            failureThreshold: 3 # max 12s startup time
            timeoutSeconds: 2
          readinessProbe: # gets only registered as the svc endpoint if probe finishes successfully
            httpGet:
              path: /     # /health for failed http request
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5   # 5 to 11 ratio so readiness can check 2 times before liveness checks
            timeoutSeconds: 2
          livenessProbe:       # => rather give tp pod a short time to maybe recover instead of restarting 
            #exec:
            httpGet:
              path: /
              port: 8080
              # command:   andere variante
              #   - ls
              #   #- nonexistendFile #=> uncomment to simulate "failed pod"
            initialDelaySeconds: 10
            timeoutSeconds: 2  # time allowed for the probe to finish, if not => pod counts as failed
            periodSeconds: 10
            failureThreshold: 2
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_HOST
            - name: POSTGRES_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_PORT
            - name: MINIO_HOST
              valueFrom:
                configMapKeyRef:
                  name: minio-config
                  key: MINIO_HOST
            - name: MINIO_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: minio-config
                  key: MINIO_ACCESS_KEY
            - name: MINIO_ORIGINAL_IMAGES_BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: minio-config
                  key: MINIO_ORIGINAL_IMAGES_BUCKET_NAME
            - name: MINIO_PORT
              valueFrom:
                configMapKeyRef:
                  name: minio-config
                  key: MINIO_DEFAULT_PORT
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_SECRET_KEY
            - name: RABBITMQ_DEFAULT_USER
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_DEFAULT_USER
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_IMAGE_QUEUE_NAME
              valueFrom:
                configMapKeyRef:
                  name: rabbitmq-config
                  key: RABBITMQ_IMAGE_QUEUE_NAME
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secret
                  key: RABBITMQ_DEFAULT_PASS
