apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
spec:
  serviceName: "minio-service"
  replicas: 3 # TODO synchonisation to be implemented
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          # Latest stable version from dockerhub as of 06.08.2023
          # Some versions were resulting in compatibility problems with MacOS (although "stable")
          image: minio/minio:RELEASE.2023-08-04T17-40-21Z.hotfix.04968f7ec
          args:
            - server
            - /data
          ports:
            - name: minio-port
              containerPort: 9000
          startupProbe:
            tcpSocket:
              port: 9000 # change port for failure demonstration
            periodSeconds: 10
            failureThreshold: 3
            timeoutSeconds: 2
          readinessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
          livenessProbe:
            tcpSocket:
              port: 9000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 2
            timeoutSeconds: 2
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: minio-config
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-secret
                  key: MINIO_SECRET_KEY
          volumeMounts:
            - name: minio-persistent-volume
              mountPath: /data
      # volumes:
      #   - name: minio-persistent-volume-claim # redundancy for availability (3 pods for the same pv/data)
      #     persistentVolumeClaim:
      #       claimName: minio-persistent-volume-claim
  volumeClaimTemplates:
    - metadata:
        name: minio-persistent-volume
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
#would be the optimal way to do it if we
#would have time for the synchronization
#=> each pod own pv => exact mapping for each pod, primary writes only with headless svc
#=> no problems regarding shared memory, consistency
